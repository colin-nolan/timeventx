---

kind: pipeline
type: docker
name: backend
platform:
  # Targetting arm64 as it is a more powerful CI machine
  arch: arm64

steps:
  - name: run-tests-unit
    image: python:3.11-alpine
    commands:
      - apk add --no-cache bash gcc libffi-dev make musl-dev
      - &poetryInstall pip install poetry && poetry config virtualenvs.create false
      - cd backend && poetry install --no-root --without=dist,deploy && cd -
      - make test-backend-unit
    depends_on: []

  - name: check-format
    image: python:3-alpine
    commands:
      - apk add --no-cache bash gcc libffi-dev make musl-dev
      - *poetryInstall
      - cd backend && poetry install --no-root --only=dev && cd -
      - make format-backend CHECK=true
    depends_on: []

  - name: check-build
    # Note: not using alpine as `mpy-cross` is not supported on that platform
    image: python:3.11
    commands:
      - *poetryInstall
      - git config --global --add safe.directory "$${PWD}"
      - cd backend && poetry install --no-root --only=dist && cd -
      - |-
          MICROPYTHON_VERSION=1.21.0
          curl -sL "https://github.com/micropython/micropython/releases/download/v$${MICROPYTHON_VERSION}/micropython-$${MICROPYTHON_VERSION}.tar.xz" | tar -xJ -C /usr/local/src
          cd "/usr/local/src/micropython-$${MICROPYTHON_VERSION}/ports/unix"
          make
          make install
          cd -
      - GARDEN_WATER_WIFI_SSID=example-ssid GARDEN_WATER_WIFI_PASSWORD=example-password make build-backend
    depends_on: []

  - name: publish-coverage
    image: python:alpine
    commands:
      - apk add --no-cache curl
      - |-
          if [[ $$(uname -m) == "aarch64" ]]; then arch=aarch64; else arch=linux; fi
          curl -fL "https://uploader.codecov.io/v0.6.3/$${arch}/codecov" > /usr/local/bin/codecov && chmod +x /usr/local/bin/codecov
      - |- 
          pip install coverage
          cd backend
          coverage combine
          coverage xml
          cd -
      - codecov
    environment:
      CODECOV_TOKEN:
        from_secret: codecov_token
    depends_on:
      - run-tests-unit

---

kind: pipeline
name: frontend
type: docker
platform:
  # Targetting arm64 as it is a more powerful CI machine
  arch: arm64

steps:
  - name: run-tests-unit
    image: node:20
    commands:
      - &installBackend |-
          apt-get update
          apt-get install -y --no-install-recommends python-is-python3 python3 python3-poetry
          poetry config virtualenvs.create false
          poetry self add coverage
          cd backend
          poetry install --no-root --only=main
          cd -
      - &installYarnPackages |- 
          cd frontend
          max_retries=3
          success=false
          for i in $(seq 3); do
              yarn install --network-timeout 3600000  \
                  && {
                      success=true
                      break;
                  } \
                  || {
                      >&2 echo "Package install with Yarn failed - retrying ($$i / $${max_retries})"
                      sleep 5;
                  }
          done
          if ! $${success}; then
              >&2 echo "Failed to install packages with Yarn" 
              exit 1
          fi
          cd -
      - make test-frontend-unit
    depends_on: []

  - name: run-tests-system
    image: node:20
    commands:
      - *installBackend
      - *installYarnPackages
      - |-
          cd frontend
          yarn playwright install
          yarn playwright install-deps 
          cd -
      - make test-frontend-system
    depends_on: []

  - name: check-format
    image: node:20-alpine
    commands:
      - apk add --no-cache bash make
      - *installYarnPackages
      - make format-frontend CHECK=true
    depends_on: []

  - name: check-build
    image: node:20-alpine
    commands:
      - apk add --no-cache bash make
      - *installYarnPackages
      - make build-frontend API_SERVER_LOCATION=http://localhost:8000
    depends_on: []

  - name: publish-coverage
    image: python:alpine
    commands:
      - apk add --no-cache curl
      - |-
          if [[ $$(uname -m) == "aarch64" ]]; then arch=aarch64; else arch=linux; fi
          curl -fL "https://uploader.codecov.io/v0.6.3/$${arch}/codecov" > /usr/local/bin/codecov && chmod +x /usr/local/bin/codecov
      - |-
          pip install coverage
          cd backend
          coverage combine
          coverage xml
          cd -
      - codecov
    environment:
      CODECOV_TOKEN:
        from_secret: codecov_token
    depends_on:
      - run-tests-unit
      - run-tests-system

---

kind: pipeline
name: general
type: docker

steps:
  - name: check-markdown
    image: python:3-alpine
    commands:
      - apk add --no-cache bash make
      - pip install mdformat-gfm
      - make format-markdown CHECK=true
    depends_on: []
