---

kind: pipeline
type: docker
name: backend
platform:
  arch: arm64

steps:
  - name: run-tests
    image: python:3.11-alpine
    commands:
      - apk add --no-cache gcc libffi-dev musl-dev
      - pip install poetry
      - apk add --no-cache bash make
      - cd backend && poetry install --no-root --without=dist,deploy && cd -
      - make test-backend
    depends_on: []

  - name: check-format
    image: python:3-alpine
    commands:
      - apk add --no-cache bash gcc libffi-dev make musl-dev
      - pip install poetry
      - cd backend && poetry install --no-root --only=dev && cd -
      - make format-backend CHECK=true
    depends_on: []

  - name: check-build
    # Note: not using alpine as `mpy-cross` is not supported on that platform
    image: python:3.11
    commands:
      - pip install poetry
      - git config --global --add safe.directory "$${PWD}"
      - cd backend && poetry install --no-root --only=dist && cd -
      - |-
          MICROPYTHON_VERSION=1.21.0
          curl -sL "https://github.com/micropython/micropython/releases/download/v$${MICROPYTHON_VERSION}/micropython-$${MICROPYTHON_VERSION}.tar.xz" | tar -xJ -C /usr/local/src
          cd "/usr/local/src/micropython-$${MICROPYTHON_VERSION}/ports/unix"
          make
          make install
          cd -
      - GARDEN_WATER_WIFI_SSID=example-ssid GARDEN_WATER_WIFI_PASSWORD=example-password make build-backend
    depends_on: []

  - name: build-codecov
    image: node:16-alpine
    commands:
      - |-
          apk add --update-cache curl git
          repository_directory="$${PWD}"
          git clone --depth=1 --branch=main https://github.com/codecov/uploader.git /tmp/uploader
          cd /tmp/uploader
          npm install
          npm run build
          npx pkg . --targets alpine --output "$${repository_directory}/build/third-party/codecov"
    depends_on: []

  - name: publish-coverage
    image: alpine
    commands:
      - build/third-party/codecov
    environment:
      CODECOV_TOKEN:
        from_secret: codecov_token
    depends_on:
      - build-codecov
      - run-tests

---

kind: pipeline
name: frontend
type: docker
platform:
  arch: arm64

steps:
  - name: check build
    image: node:20-alpine
    commands:
      - apk add --no-cache bash make
      - cd frontend && yarn install && cd -
      - make build-frontend API_SERVER_LOCATION=http://localhost:8000
    depends_on: []

  - name: check format
    image: node:20-alpine
    commands:
      - apk add --no-cache bash make
      - cd frontend && yarn install && cd -
      - make format-frontend CHECK=true

---

kind: pipeline
name: general
type: docker

steps:
  - name: check markdown
    image: python:3-alpine
    commands:
      - apk add --no-cache bash make
      - pip install mdformat-gfm
      - make format-markdown CHECK=true
    depends_on: []